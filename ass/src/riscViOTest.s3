.globl core.start


@core>
start
private
start: li      frame, 0x305
            push    4,8
            jal     entry
            nop
            nop

entry:
            pushg   1, 0
            sp      ra, 0(frame)
            sw      ra, 0(frame)

            la      a0, @hdmi

            la      s0, @usb
            mv      s1, s0
            sp      s1, 0(frame)

            jlib    s0, @usb.af

            lp      s0, 0(frame)
            jlib    s0, @usb.b

            ebreak



@usb>
af
b
private

af:     nop
            nop
            ret                 #standard risc-v pseudo-instruction for jr zero, 0(ra)

b:      push    0,0
            sw      ra, 0(frame)
            jal     c
            lw      ra, 0(frame)
            ret                 #standard risc-v pseudo-instruction for jr zero, 0(ra)

c:      pushg   0,0
            sw      ra, 0(frame)
            sp      ra, 0(frame)
            jlib    a0, @hdmi.s
            lp      ra, 0(frame)
            lw      ra, 0(frame)
            ret                 #standard risc-v pseudo-instruction for jr zero, 0(ra)



@hdmi>
s
private

s: nop
            nop
            ret                 #standard risc-v pseudo-instruction for jr zero, 0(ra)


